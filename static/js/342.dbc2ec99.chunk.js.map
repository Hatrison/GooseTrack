{"version":3,"file":"static/js/342.dbc2ec99.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/locale/uk/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/uk/_lib/formatLong/index.js","../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","../node_modules/date-fns/esm/locale/uk/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/uk/_lib/localize/index.js","../node_modules/date-fns/esm/locale/uk/index.js","../node_modules/date-fns/esm/locale/uk/_lib/match/index.js","../node_modules/date-fns/esm/startOfWeek/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n  var rem10 = count % 10;\n  var rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'за ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' тому';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\nvar halfAtMinute = function halfAtMinute(_, options) {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'за півхвилини';\n    } else {\n      return 'півхвилини тому';\n    }\n  }\n  return 'півхвилини';\n};\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менше секунди',\n      singularNominative: 'менше {{count}} секунди',\n      singularGenitive: 'менше {{count}} секунд',\n      pluralGenitive: 'менше {{count}} секунд'\n    },\n    future: {\n      one: 'менше, ніж за секунду',\n      singularNominative: 'менше, ніж за {{count}} секунду',\n      singularGenitive: 'менше, ніж за {{count}} секунди',\n      pluralGenitive: 'менше, ніж за {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунди',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду тому',\n      singularGenitive: '{{count}} секунди тому',\n      pluralGenitive: '{{count}} секунд тому'\n    },\n    future: {\n      singularNominative: 'за {{count}} секунду',\n      singularGenitive: 'за {{count}} секунди',\n      pluralGenitive: 'за {{count}} секунд'\n    }\n  }),\n  halfAMinute: halfAtMinute,\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менше хвилини',\n      singularNominative: 'менше {{count}} хвилини',\n      singularGenitive: 'менше {{count}} хвилин',\n      pluralGenitive: 'менше {{count}} хвилин'\n    },\n    future: {\n      one: 'менше, ніж за хвилину',\n      singularNominative: 'менше, ніж за {{count}} хвилину',\n      singularGenitive: 'менше, ніж за {{count}} хвилини',\n      pluralGenitive: 'менше, ніж за {{count}} хвилин'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвилина',\n      singularGenitive: '{{count}} хвилини',\n      pluralGenitive: '{{count}} хвилин'\n    },\n    past: {\n      singularNominative: '{{count}} хвилину тому',\n      singularGenitive: '{{count}} хвилини тому',\n      pluralGenitive: '{{count}} хвилин тому'\n    },\n    future: {\n      singularNominative: 'за {{count}} хвилину',\n      singularGenitive: 'за {{count}} хвилини',\n      pluralGenitive: 'за {{count}} хвилин'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} години',\n      singularGenitive: 'близько {{count}} годин',\n      pluralGenitive: 'близько {{count}} годин'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} годину',\n      singularGenitive: 'приблизно за {{count}} години',\n      pluralGenitive: 'приблизно за {{count}} годин'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} годину',\n      singularGenitive: '{{count}} години',\n      pluralGenitive: '{{count}} годин'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} день',\n      singularGenitive: '{{count}} днi',\n      pluralGenitive: '{{count}} днів'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} тижня',\n      singularGenitive: 'близько {{count}} тижнів',\n      pluralGenitive: 'близько {{count}} тижнів'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} тиждень',\n      singularGenitive: 'приблизно за {{count}} тижні',\n      pluralGenitive: 'приблизно за {{count}} тижнів'\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} тиждень',\n      singularGenitive: '{{count}} тижні',\n      pluralGenitive: '{{count}} тижнів'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} місяця',\n      singularGenitive: 'близько {{count}} місяців',\n      pluralGenitive: 'близько {{count}} місяців'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} місяць',\n      singularGenitive: 'приблизно за {{count}} місяці',\n      pluralGenitive: 'приблизно за {{count}} місяців'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} місяць',\n      singularGenitive: '{{count}} місяці',\n      pluralGenitive: '{{count}} місяців'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'близько {{count}} року',\n      singularGenitive: 'близько {{count}} років',\n      pluralGenitive: 'близько {{count}} років'\n    },\n    future: {\n      singularNominative: 'приблизно за {{count}} рік',\n      singularGenitive: 'приблизно за {{count}} роки',\n      pluralGenitive: 'приблизно за {{count}} років'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} рік',\n      singularGenitive: '{{count}} роки',\n      pluralGenitive: '{{count}} років'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'більше {{count}} року',\n      singularGenitive: 'більше {{count}} років',\n      pluralGenitive: 'більше {{count}} років'\n    },\n    future: {\n      singularNominative: 'більше, ніж за {{count}} рік',\n      singularGenitive: 'більше, ніж за {{count}} роки',\n      pluralGenitive: 'більше, ніж за {{count}} років'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'майже {{count}} рік',\n      singularGenitive: 'майже {{count}} роки',\n      pluralGenitive: 'майже {{count}} років'\n    },\n    future: {\n      singularNominative: 'майже за {{count}} рік',\n      singularGenitive: 'майже за {{count}} роки',\n      pluralGenitive: 'майже за {{count}} років'\n    }\n  })\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: \"EEEE, do MMMM y 'р.'\",\n  long: \"do MMMM y 'р.'\",\n  medium: \"d MMM y 'р.'\",\n  short: 'dd.MM.y'\n};\nvar timeFormats = {\n  full: 'H:mm:ss zzzz',\n  long: 'H:mm:ss z',\n  medium: 'H:mm:ss',\n  short: 'H:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'о' {{time}}\",\n  long: \"{{date}} 'о' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import { toDate } from \"../../../../index.js\";\nimport isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['неділю', 'понеділок', 'вівторок', 'середу', 'четвер', 'п’ятницю', 'суботу'];\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у минулу \" + weekday + \" о' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'у минулий \" + weekday + \" о' p\";\n  }\n}\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'у \" + weekday + \" о' p\";\n}\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у наступну \" + weekday + \" о' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'у наступний \" + weekday + \" о' p\";\n  }\n}\nvar lastWeekFormat = function lastWeekFormat(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\nvar nextWeekFormat = function nextWeekFormat(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'вчора о' p\",\n  today: \"'сьогодні о' p\",\n  tomorrow: \"'завтра о' p\",\n  nextWeek: nextWeekFormat,\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n};\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['до н.е.', 'н.е.'],\n  abbreviated: ['до н. е.', 'н. е.'],\n  wide: ['до нашої ери', 'нашої ери']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-й кв.', '2-й кв.', '3-й кв.', '4-й кв.'],\n  wide: ['1-й квартал', '2-й квартал', '3-й квартал', '4-й квартал']\n};\nvar monthValues = {\n  // ДСТУ 3582:2013\n  narrow: ['С', 'Л', 'Б', 'К', 'Т', 'Ч', 'Л', 'С', 'В', 'Ж', 'Л', 'Г'],\n  abbreviated: ['січ.', 'лют.', 'берез.', 'квіт.', 'трав.', 'черв.', 'лип.', 'серп.', 'верес.', 'жовт.', 'листоп.', 'груд.'],\n  wide: ['січень', 'лютий', 'березень', 'квітень', 'травень', 'червень', 'липень', 'серпень', 'вересень', 'жовтень', 'листопад', 'грудень']\n};\nvar formattingMonthValues = {\n  narrow: ['С', 'Л', 'Б', 'К', 'Т', 'Ч', 'Л', 'С', 'В', 'Ж', 'Л', 'Г'],\n  abbreviated: ['січ.', 'лют.', 'берез.', 'квіт.', 'трав.', 'черв.', 'лип.', 'серп.', 'верес.', 'жовт.', 'листоп.', 'груд.'],\n  wide: ['січня', 'лютого', 'березня', 'квітня', 'травня', 'червня', 'липня', 'серпня', 'вересня', 'жовтня', 'листопада', 'грудня']\n};\nvar dayValues = {\n  narrow: ['Н', 'П', 'В', 'С', 'Ч', 'П', 'С'],\n  short: ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n  abbreviated: ['нед', 'пон', 'вів', 'сер', 'чтв', 'птн', 'суб'],\n  wide: ['неділя', 'понеділок', 'вівторок', 'середа', 'четвер', 'п’ятниця', 'субота']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранок',\n    afternoon: 'день',\n    evening: 'веч.',\n    night: 'ніч'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранок',\n    afternoon: 'день',\n    evening: 'веч.',\n    night: 'ніч'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'північ',\n    noon: 'полудень',\n    morning: 'ранок',\n    afternoon: 'день',\n    evening: 'вечір',\n    night: 'ніч'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранку',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночі'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'півн.',\n    noon: 'пол.',\n    morning: 'ранку',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночі'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'північ',\n    noon: 'полудень',\n    morning: 'ранку',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночі'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, options) {\n  var unit = String(options === null || options === void 0 ? void 0 : options.unit);\n  var number = Number(dirtyNumber);\n  var suffix;\n  if (unit === 'date') {\n    if (number === 3 || number === 23) {\n      suffix = '-є';\n    } else {\n      suffix = '-е';\n    }\n  } else if (unit === 'minute' || unit === 'second' || unit === 'hour') {\n    suffix = '-а';\n  } else {\n    suffix = '-й';\n  }\n  return number + suffix;\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'any',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Ukrainian locale.\n * @language Ukrainian\n * @iso-639-2 ukr\n * @author Andrii Korzh [@korzhyk]{@link https://github.com/korzhyk}\n * @author Andriy Shcherbyak [@shcherbyakdev]{@link https://github.com/shcherbyakdev}\n */\nvar locale = {\n  code: 'uk',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(-?(е|й|є|а|я))?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^((до )?н\\.?\\s?е\\.?)/i,\n  abbreviated: /^((до )?н\\.?\\s?е\\.?)/i,\n  wide: /^(до нашої ери|нашої ери|наша ера)/i\n};\nvar parseEraPatterns = {\n  any: [/^д/i, /^н/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[иі]?й?)? кв.?/i,\n  wide: /^[1234](-?[иі]?й?)? квартал/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[слбктчвжг]/i,\n  abbreviated: /^(січ|лют|бер(ез)?|квіт|трав|черв|лип|серп|вер(ес)?|жовт|лис(топ)?|груд)\\.?/i,\n  wide: /^(січень|січня|лютий|лютого|березень|березня|квітень|квітня|травень|травня|червня|червень|липень|липня|серпень|серпня|вересень|вересня|жовтень|жовтня|листопад[а]?|грудень|грудня)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^с/i, /^л/i, /^б/i, /^к/i, /^т/i, /^ч/i, /^л/i, /^с/i, /^в/i, /^ж/i, /^л/i, /^г/i],\n  any: [/^сі/i, /^лю/i, /^б/i, /^к/i, /^т/i, /^ч/i, /^лип/i, /^се/i, /^в/i, /^ж/i, /^лис/i, /^г/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[нпвсч]/i,\n  short: /^(нд|пн|вт|ср|чт|пт|сб)\\.?/i,\n  abbreviated: /^(нед|пон|вів|сер|че?тв|птн?|суб)\\.?/i,\n  wide: /^(неділ[яі]|понеділ[ок][ка]|вівтор[ок][ка]|серед[аи]|четвер(га)?|п\\W*?ятниц[яі]|субот[аи])/i\n};\nvar parseDayPatterns = {\n  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^н/i, /^п[он]/i, /^в/i, /^с[ер]/i, /^ч/i, /^п\\W*?[ят]/i, /^с[уб]/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^([дп]п|півн\\.?|пол\\.?|ранок|ранку|день|дня|веч\\.?|ніч|ночі)/i,\n  abbreviated: /^([дп]п|півн\\.?|пол\\.?|ранок|ранку|день|дня|веч\\.?|ніч|ночі)/i,\n  wide: /^([дп]п|північ|полудень|ранок|ранку|день|дня|вечір|вечора|ніч|ночі)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^дп/i,\n    pm: /^пп/i,\n    midnight: /^півн/i,\n    noon: /^пол/i,\n    morning: /^р/i,\n    afternoon: /^д[ен]/i,\n    evening: /^в/i,\n    night: /^н/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"names":["addDays","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","setDate","getDate","startOfDay","setHours","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","getTime","declension","scheme","count","undefined","one","rem10","rem100","singularNominative","replace","String","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","isSameUTCWeek","dateLeftStartOfWeek","startOfUTCWeek","dateRightStartOfWeek","accusativeWeekdays","thisWeek","day","formatRelativeLocale","lastWeek","baseDate","getUTCDay","weekday","yesterday","today","tomorrow","nextWeek","other","format","ordinalNumber","dirtyNumber","unit","number","Number","era","buildLocalizeFn","values","narrow","abbreviated","wide","quarter","argumentCallback","month","formattingValues","defaultFormattingWidth","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","code","formatDistance","formatLong","formatRelative","localize","match","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","value","parseInt","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","any","defaultParseWidth","index","weekStartsOn","firstWeekContainsDate","startOfWeek","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","getDefaultOptions","locale","RangeError","getDay","diff"],"sourceRoot":""}