{"version":3,"file":"static/js/70.47a8ee20.chunk.js","mappings":"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","sources":["images/account/plus.svg","components/UserForm/UserValidSchema.js","components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage/AccountPage.jsx","redux/user/selectors.js"],"sourcesContent":["var _circle, _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 12,\n    fill: \"#3E85F3\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 6.75V17.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.75 12H17.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.7f0e1687bbbbcdc12ab3890716d5ed3b.svg\";\nexport { ForwardRef as ReactComponent };","import * as Yup from 'yup';\n\nconst regexPhone = /^\\+380\\d{9}$/;\n// const regexPhone = /^\\d{2} \\(\\d{3}\\) \\d{3} \\d{2} \\d{2}$/;\nconst regexSkype = /^\\S[\\S\\s]{0,28}\\S$/;\n\nexport const UserValidSchema = () =>\n  Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required')\n      .min(3, 'Name is too short')\n      .max(16, 'Name is too long'),\n    birthday: Yup.string().notRequired(),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    phone: Yup.string()\n      .matches(\n        regexPhone,\n        'The phone number must start with +380 and be 9 digits long'\n      )\n      .min(13, 'Phone is too Short!')\n      .max(13, 'Phone is too Long!')\n      .notRequired(),\n    skype: Yup.string()\n      .matches(regexSkype, 'Skype must be between 3 and 16 characters')\n      .max(13, 'At most 13 digits is required')\n      .test(\n        'Skype-validation',\n        'Skype must be at least 3 characters long',\n        value => {\n          return value && value.replace(/\\s/g, '').length >= 3;\n        }\n      ),\n  });\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikFieldAdd } from 'formik';\nimport { ReactComponent as plus } from '../../images/account/plus.svg';\n//import { ReactComponent as Avatar } from '../../images/svg/user.svg';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding-top: 59px;\n  padding-bottom: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  background-color: ${({ theme }) => theme.mainBackgroundColor};\n  border-radius: ${({ theme }) => theme.bordeRadius};\n\n  @media (min-width: 768px) {\n    align-items: center;\n    padding-top: 40px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 60px;\n    padding-bottom: 60px;\n  }\n`;\n\nexport const FieldAdd = styled(FormikFieldAdd)`\n  display: none;\n`;\n\nexport const UserWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n  }\n  gap: 50px;\n`;\n\nexport const WrapperForm = styled.div`\n  max-width: 375px;\n  padding-bottom: 40px;\n  position: relative;\n  @media (min-width: 768px) {\n    max-width: 100%;\n    min-width: 768px;\n    padding-bottom: 38px;\n  }\n  @media (min-width: 1440px) {\n    max-width: 100%;\n    padding-bottom: 32px;\n  }\n`;\n\nexport const AvatarWrapper = styled.div`\n  margin-bottom: 14px;\n  width: 72px;\n  height: 72px;\n  position: absolute;\n  left: calc(50% - 36px);\n  top: -36px;\n  fill: rgba(62, 133, 243, 0.18);\n  background-color: ${({ theme }) => theme.mainBackgroundColor};\n  border: 2px solid #3e85f3;\n  border-radius: 50%;\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    position: static;\n    width: 124px;\n    height: 124px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ImgAvatar = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: 50% 50%;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const AddIcon = styled(plus)`\n  position: absolute;\n  left: 53%;\n  top: 25px;\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n    top: 147px;\n    left: 52%;\n  }\n  @media (min-width: 1440px) {\n    top: 170px;\n    left: 51%;\n  }\n`;\n\nexport const DefaultAvatar = styled.div`\n  width: 100px;\n  height: 100px;\n  display: block;\n  background-color: blue;\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../../redux/user/selectors';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport dayjs from 'dayjs';\nimport { toast } from 'react-toastify';\nimport { UserValidSchema } from './UserValidSchema';\nimport { updateUser } from '../../redux/user/operations';\nimport {\n  AddIcon,\n  AvatarWrapper,\n  FieldAdd,\n  Form,\n  ImgAvatar,\n  UserInfo,\n  UserWrapper,\n  WrapperForm,\n} from './UserForm.styled';\n\nconst currentDate = dayjs(new Date()).format('YYYY/MM/DD');\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector(selectUser);\n\n  const [avatarURL, setAvatarURL] = useState(null);\n  const [birthDate, setBirthDate] = useState(null);\n\n  const handleSubmit = async values => {\n    const formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('email', values.email);\n    if (values.phone) {\n      formData.append('phone', values.phone);\n    }\n    if (values.skype) {\n      formData.append('skype', values.skype);\n    }\n    formData.append(\n      'birthday',\n      birthDate ? dayjs(birthDate).format('YYYY/MM/DD') : ''\n    );\n    if (avatarURL) {\n      formData.append('avatar', avatarURL);\n    }\n    try {\n      await dispatch(updateUser(formData));\n      toast.success('Profile data changed successfully');\n    } catch {\n      toast.error('Something went wrong... Try again!');\n    }\n  };\n\n  return (\n    <WrapperForm>\n      <Formik\n        validationSchema={UserValidSchema}\n        initialValues={{\n          name: userInfo?.name || '',\n          birthday: userInfo?.birthday || `${birthDate}` || `${currentDate}`,\n          email: userInfo?.email || '',\n          phone: userInfo?.phone || '',\n          skype: userInfo?.skype || '',\n        }}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <Form>\n            <div>\n              <AvatarWrapper>\n                {avatarURL ? (\n                  <label htmlFor=\"avatar\">\n                    <ImgAvatar\n                      src={URL.createObjectURL(avatarURL)}\n                      alt=\"Avatar\"\n                    />\n                  </label>\n                ) : userInfo?.avatarURL ? (\n                  <label htmlFor=\"avatar\">\n                    <ImgAvatar src={userInfo?.avatarURL} alt=\"Avatar\" />\n                  </label>\n                ) : (\n                  ''\n                )}\n              </AvatarWrapper>\n              <FieldAdd\n                id=\"add-avatar\"\n                name=\"avatar\"\n                type=\"file\"\n                accept=\"image/*, .png,.jpg, .gif\"\n                onChange={e => {\n                  setAvatarURL(e.target.files[0]);\n                }}\n              />\n              <label htmlFor=\"add-avatar\">\n                <AddIcon />\n              </label>\n            </div>\n            <h1>{userInfo.name}</h1>\n            <p>User</p>\n            <UserWrapper>\n              <UserInfo>\n                <label>\n                  User Name\n                  <Field name=\"name\" />\n                  <ErrorMessage name=\"name\" component=\"span\" />\n                </label>\n\n                <label>\n                  Birthday\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DatePicker\n                      name=\"birthday\"\n                      type=\"date\"\n                      slotProps={{\n                        textField: {\n                          placeholder: userInfo.birthday || `${currentDate}`,\n                        },\n                      }}\n                      views={['year', 'month', 'day']}\n                      format=\"YYYY/MM/DD\"\n                      closeOnSelect={true}\n                      disableFuture={true}\n                      onChange={date => {\n                        if (!date) setFieldValue('birthday', '');\n                        setFieldValue('birthday', date);\n                        setBirthDate(date);\n                      }}\n                    />\n                  </LocalizationProvider>\n                </label>\n                <div>\n                  <label>\n                    Email\n                    <Field name=\"email\" type=\"email\" />\n                    <ErrorMessage name=\"email\" component=\"span\" />\n                  </label>\n                </div>\n              </UserInfo>\n\n              <UserInfo>\n                <label>\n                  Phone\n                  <Field name=\"phone\" type=\"tel\" placeholder=\"+380XXXXXXXXX\" />\n                  <ErrorMessage name=\"phone\" component=\"span\" />\n                </label>\n\n                <label>\n                  Skype\n                  <Field\n                    name=\"skype\"\n                    type=\"text\"\n                    placeholder=\"Add a skype number\"\n                  />\n                  <ErrorMessage name=\"skype\" component=\"span\" />\n                </label>\n              </UserInfo>\n            </UserWrapper>\n\n            <button type=\"submit\">Save changes</button>\n          </Form>\n        )}\n      </Formik>\n    </WrapperForm>\n  );\n};\n\nexport default UserForm;\n","import UserForm from 'components/UserForm/UserForm';\n\nconst AccountPage = () => {\n  return (\n    <div>\n      <UserForm />\n    </div>\n  );\n};\n\nexport default AccountPage;\n","export const selectUser = state => state.user;\n"],"names":["_circle","_path","_path2","regexPhone","regexSkype","UserValidSchema","Yup","shape","name","required","min","max","birthday","notRequired","email","phone","matches","skype","test","value","replace","length","_excluded","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPlus","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","cx","cy","r","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","theme","mainBackgroundColor","_ref2","bordeRadius","FieldAdd","FormikFieldAdd","_templateObject2","UserWrapper","_templateObject3","WrapperForm","_templateObject4","AvatarWrapper","_templateObject5","_ref3","ImgAvatar","_templateObject6","UserInfo","_templateObject7","AddIcon","plus","_templateObject8","_templateObject9","currentDate","dayjs","Date","format","dispatch","useDispatch","userInfo","useSelector","selectUser","_useState","useState","_useState2","_slicedToArray","avatarURL","setAvatarURL","_useState3","_useState4","birthDate","setBirthDate","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","wrap","_context","prev","next","FormData","append","updateUser","toast","t0","stop","_x","_jsx","children","Formik","validationSchema","initialValues","concat","onSubmit","setFieldValue","_jsxs","htmlFor","src","URL","createObjectURL","alt","type","accept","onChange","e","files","Field","ErrorMessage","component","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","slotProps","textField","placeholder","views","closeOnSelect","disableFuture","date","UserForm","state","user"],"sourceRoot":""}