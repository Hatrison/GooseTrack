{"version":3,"file":"static/js/770.39cf59cb.chunk.js","mappings":"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","sources":["images/svg/chevron-left.svg","images/svg/chevron-right.svg","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.js","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.jsx","components/Statistics/StatisticsChart/StatisticsChart.jsx","components/Statistics/StatisticsSection/StatisticsSection.styled.js","components/Statistics/StatisticsCalendar/StatisticsCalendar.styled.js","components/Statistics/StatisticsCalendar/StatisticsCalendar.jsx","components/Statistics/StatisticsSection/StatisticsSection.jsx","pages/StatisticsPage/StatisticsPage.styled.js","pages/StatisticsPage/StatisticsPage.jsx","redux/date/selectors.js","redux/tasks/selectors.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"current\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.25 13.5L6.75 9L11.25 4.5\",\n    stroke: \"current\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronLeft);\nexport default __webpack_public_path__ + \"static/media/chevron-left.13f90e3ee21d73b905b036a393160ae3.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"current\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.75 13.5L11.25 9L6.75 4.5\",\n    stroke: \"current\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronRight);\nexport default __webpack_public_path__ + \"static/media/chevron-right.05ed91753dea187a65a5e3218ec548dc.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const PeriodPaginatorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media (min-width: 768px) {\n    justify-content: flex-start;\n    gap: 8px;\n  }\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  height: 30px;\n  @media (min-width: 768px) {\n    height: 36px;\n  }\n`;\n\nexport const Btn = styled.button`\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background-color: ${({ theme }) => theme.mainBackgroundColor};\n  &:disabled {\n    background-color: ${({ theme }) => theme.mainBackgroundColor};\n\n    & svg {\n      stroke: #dce3e5;\n    }\n  }\n\n  &.subtraction {\n    border-radius: 8px 0 0 8px;\n  }\n\n  &.addition {\n    border-radius: 0 8px 8px 0;\n  }\n\n  & svg {\n    fill: transparent;\n    stroke: ${({ theme }) => theme.CalendarHead};\n  }\n  @media (min-width: 768px) {\n    width: 38px;\n  }\n`;\n\nexport const StyledDate = styled.p`\n  display: inline-block;\n  font-family: Inter, sans-serif;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 18px;\n\n  padding: 6px 12px;\n  border-radius: 8px;\n\n  background-color: ${({ theme }) => theme.accentColor};\n  color: ${({ theme }) => theme.buttontextColor};\n\n  text-transform: uppercase;\n  text-align: center;\n  @media (min-width: 768px) {\n    font-size: 16px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { format, parse, add, sub } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport { setDates } from 'redux/date/dateSlice';\nimport { selectDate } from 'redux/date/selectors';\nimport { ReactComponent as LeftArrow } from 'images/svg/chevron-left.svg';\nimport { ReactComponent as RightArrow } from 'images/svg/chevron-right.svg';\n\nimport {\n  Btn,\n  Ul,\n  Li,\n  StyledDate,\n  PeriodPaginatorWrapper,\n} from './PeriodPaginator.styled';\n\nexport const PeriodPaginator = ({ type }) => {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  const normalizedDate = useSelector(selectDate);\n\n  useEffect(() => {\n    if (params.currentDate && params.currentDate !== ':currentDate') {\n      if (normalizedDate !== params.currentDate) {\n        dispatch(setDates(params.currentDate));\n      }\n    }\n  }, [dispatch, normalizedDate, params.currentDate]);\n\n  const date = parse(normalizedDate, 'yyyy-MM-dd', Date.now());\n\n  const onChangeDate = e => {\n    const period = `${type}s`;\n    const newDate =\n      e.currentTarget.name === 'addition'\n        ? add(date, { [period]: 1 })\n        : sub(date, { [period]: 1 });\n\n    const formattedNewDate = format(newDate, 'yyyy-MM-dd');\n    dispatch(setDates(formattedNewDate));\n    if (pathname.includes('/calendar/')) {\n      navigate(`${type}/${formattedNewDate}`);\n    }\n    return;\n  };\n\n  const currentDate = format(date, 'dd MMMM yyyy');\n\n  return (\n    <PeriodPaginatorWrapper>\n      <StyledDate>\n        {type === 'month' ? currentDate.slice(3) : currentDate}\n      </StyledDate>\n      <Ul>\n        <Li>\n          <Btn\n            type=\"button\"\n            name=\"subtraction\"\n            className=\"subtraction\"\n            onClick={onChangeDate}\n          >\n            <LeftArrow />\n          </Btn>\n        </Li>\n        <Li>\n          <Btn\n            type=\"button\"\n            name=\"addition\"\n            className=\"addition\"\n            onClick={onChangeDate}\n          >\n            <RightArrow />\n          </Btn>\n        </Li>\n      </Ul>\n    </PeriodPaginatorWrapper>\n  );\n};\n\nPeriodPaginator.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { parse } from 'date-fns';\nimport { getTasks } from 'redux/tasks/operations';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { useMediaQuery } from 'react-responsive';\n\n// підписка на дату та таски із редаксу\nimport { selectDate } from 'redux/date/selectors';\nimport { selectTasks } from 'redux/tasks/selectors';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  Label,\n} from 'recharts';\n\nexport const StatisticsChart = () => {\n  const theme = useSelector(selectTheme);\n  const isDarkTheme = theme === 'dark';\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const normalizedDate = useSelector(selectDate);\n  const date = parse(normalizedDate, 'yyyy-MM-dd', Date.now());\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth() + 1;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTasks({ month, year }));\n  }, [dispatch, month, year]);\n\n  // берем данні із редакса, таски = tasks.tasks\n  const selectedDate = useSelector(selectDate);\n  const tasks = useSelector(selectTasks);\n\n  //довжина масивів = кількість тасок за день та за місяць\n  const tasksByDay = tasks.tasks.filter(task => task.date === selectedDate);\n\n  const taskByMonth = tasks.tasks;\n\n  const todoByDay = tasksByDay.filter(task => task.category === 'to-do').length;\n\n  const inprogressByDay = tasksByDay.filter(\n    task => task.category === 'in-progress'\n  ).length;\n\n  const doneByDay = tasksByDay.filter(task => task.category === 'done').length;\n\n  const todoByMonth = taskByMonth.filter(\n    task => task.category === 'to-do'\n  ).length;\n\n  const inprogressByMonth = taskByMonth.filter(\n    task => task.category === 'in-progress'\n  ).length;\n\n  const doneByMonth = taskByMonth.filter(\n    task => task.category === 'done'\n  ).length;\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const allTasksByMonth = todoByMonth + inprogressByMonth + doneByMonth;\n  const columns = [\n    {\n      name: 'To Do',\n      byDay: `${Math.round((todoByDay / allTasksByDay) * 100) || 0}`,\n      byMonth: `${Math.round((todoByMonth / allTasksByMonth) * 100) || 0}`,\n    },\n    {\n      name: 'In Progress',\n      byDay: `${Math.round((inprogressByDay / allTasksByDay) * 100) || 0}`,\n      byMonth: `${\n        Math.round((inprogressByMonth / allTasksByMonth) * 100) || 0\n      }`,\n    },\n    {\n      name: 'Done',\n      byDay: `${Math.round((doneByDay / allTasksByDay) * 100) || 0}`,\n      byMonth: `${Math.round((doneByMonth / allTasksByMonth) * 100) || 0}`,\n    },\n  ];\n\n  const renderCustomBarLabel = ({ x, y, width, value }) => {\n    return (\n      <text\n        x={x + width / 2}\n        y={y}\n        position=\"top\"\n        fontFamily=\"InterNormal, sans-serif\"\n        fontSize={isMobile ? '12' : '14'}\n        fill={isDarkTheme ? '#fff' : '#343434'}\n        textAnchor=\"middle\"\n        dy={-6}\n      >{`${value}%`}</text>\n    );\n  };\n\n  return (\n    <ResponsiveContainer>\n      <BarChart\n        data={columns}\n        margin={{\n          top: 45,\n          right: 10,\n          left: 10,\n          bottom: 10,\n        }}\n        barCategoryGap={75}\n        barGap={10}\n        barSize={27}\n      >\n        <defs>\n          <linearGradient id=\"colorP\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"rgb(255, 210, 221)\" stopOpacity={0} />\n            <stop\n              offset=\"100%\"\n              stopColor=\"rgb(255, 210, 221)\"\n              stopOpacity={1}\n            />\n          </linearGradient>\n        </defs>\n        <defs>\n          <linearGradient id=\"colorB\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"rgb(62, 133, 243)\" stopOpacity={0} />\n            <stop offset=\"100%\" stopColor=\"rgb(62, 133, 243)\" stopOpacity={1} />\n          </linearGradient>\n        </defs>\n        <CartesianGrid\n          x={100}\n          stroke={isDarkTheme ? '#E3F3FF26' : '#E3F3FF'}\n          vertical={false}\n        />\n        <XAxis\n          dataKey=\"name\"\n          tickSize={0}\n          tickMargin={16}\n          axisLine={false}\n          fontFamily=\"InterNormal, sans-serif\"\n          fontSize={isMobile ? '12' : '14'}\n          stroke={isDarkTheme ? '#fff' : '#343434'}\n        />\n        <YAxis\n          ticks={[0, 20, 40, 60, 80, 100]}\n          position=\"left\"\n          axisLine={false}\n          tickLine={false}\n          tickCount={6}\n          tickMargin={20}\n          fontFamily=\"InterNormal, sans-serif\"\n          fontSize={'14'}\n          stroke={isDarkTheme ? '#fff' : '#343434'}\n        >\n          <Label\n            position=\"top\"\n            dy={-28}\n            fontFamily=\"InterNormal, sans-serif\"\n            fontSize={'14'}\n            fill={isDarkTheme ? '#fff' : '#343434'}\n          >\n            Tasks\n          </Label>\n        </YAxis>\n        <Bar\n          name=\"By Day\"\n          dataKey=\"byDay\"\n          fill=\"url(#colorP)\"\n          barSize={27}\n          radius={10}\n          minPointSize={10}\n          label={renderCustomBarLabel}\n        />\n        <Bar\n          name=\"By Month\"\n          dataKey=\"byMonth\"\n          fill=\"url(#colorB)\"\n          barSize={27}\n          radius={10}\n          minPointSize={10}\n          label={renderCustomBarLabel}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default StatisticsChart;\n","import styled from 'styled-components';\n\nexport const StatisticsWrapper = styled.section`\n  width: 100%;\n\n  @media screen and (min-width: 390px) and (max-width: 768px) {\n    max-width: 500px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    max-width: 862px;\n  }\n`;\n\nexport const HeadContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  column-gap: 40px;\n  width: 100%;\n  justify-content: space-between;\n  align-items: baseline;\n  padding-bottom: 48px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const PaginationWrapper = styled.div`\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const PeriodTime = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const Period = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-family: 'InterRegular', sans-serif;\n  font-size: 14px;\n  color: ${({ theme }) => theme.periodColor};\n  line-height: 1.3;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  margin-top: auto;\n  width: 100%;\n  border-radius: 20px;\n  border: ${({ theme }) => theme.statisticsBorder};\n  padding: 40px 14px;\n  height: 413px;\n\n  @media screen and (min-width: 768px) {\n    height: 424px;\n    padding: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 440px;\n    padding: 40px;\n  }\n`;\n","import styled from 'styled-components';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const CustomInput = styled.button`\n  position: absolute;\n  cursor: pointer;\n  width: 150px;\n  height: 35px;\n  top: -50px;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  margin-top: 8px;\n  width: 100%;\n  height: 30px;\n  margin-bottom: 18px;\n  padding: 14px 18px;\n    border-radius: 8px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 138px;\n\n  }\n  @media screen and (min-width: 768px) {\n    width: 150px;\n  }\n\n  @media screen and (min-width: 1400px) {\n    margin-bottom: 24px;\n    width: 150px;\n    \n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    * {\n      margin: 0;\n      padding: 0;\n    }\n\n        background-color: inherit;\n    font-family: 'Inter', sans-serif;\n    font-size: 18px;\n    line-height: 24px;\n    border: none;\n\n    \n    &__year-dropdown {\n      background-color: #ffffff;\n    }\n\n  //   &__input-container {\n  //   position: relative;\n  // display: inline-block;\n  // width: 100%;\n  // z-index: 0\n  //   }\n\n    \n\n    &__year-option--selected_year {\n      color: #3e85f3;\n    }\n\n    &__year-read-view--selected-year {\n      color: #fff;\n    }\n\n    &-wrapper:hover & {\n      background-color: #ffffff;\n      border-radius: 50%;\n    }\n    &_year-read-view--selected-year {\n      color: #ffff;\n    }\n    &-popper {\n      transform: translate(881.05px, 950.217px);\n      inset: 0px auto auto 50px;\n    }\n\n  &__month-container {\n    padding: 15px 18px;\n    background-color: #3e85f3;\n    border-radius: 16px;\n    position: absolut;\n\n      \n   & .react-datepicker__header  {\n   background-color: #3e85f3;\n  }\n\n   \n\n    & .react-datepicker__day-name,\n    & .react-datepicker__day {\n      width: 48px;\n      height: 48px;\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      font-weight: 400;\n      font-size: 18px;\n      line-height: 1;\n      color: #ffffff;\n      border-radius: 50%;\n\n      &--keyboard-selected {\n        border-radius: 50%;\n      }\n\n    &__navigation {\n      width: 18px;\n      height: 18px;\n      top: 24px;\n\n\n      &--previous {\n        left: 18px;\n      }\n\n      &--next {\n        right: 18px;\n      }\n    }\n\n    &__header {\n       background-color: #3e85f3;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n      padding: 0;\n    }\n\n    &__month-container {\n      padding: 15px 18px;\n      background-color: #3e85f3;\n      border-radius: 16px;\n\n      & .react-datepicker__day-name,\n      & .react-datepicker__day {\n        width: 48px;\n        height: 48px;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        font-weight: 400;\n        font-size: 18px;\n        line-height: 1;\n        color: #ffffff;\n\n        &--keyboard-selected,\n        &--selected {\n          background-color: #ffffff;\n          border-radius: 50%;\n          color: #3e85f3;\n        }\n      }\n\n      & .react-datepicker__day {\n        &.outside-month {\n          visibility: hidden;\n          pointer-events: none;\n        }\n        &.highlighted-weekend {\n          opacity: 0.35;\n        }\n\n    \n        &:hover,\n        &:focus {\n          color: #3e85f3;\n          border-radius: 50%;\n        }\n      }\n\n      & .react-datepicker__current-month {\n        font-weight: 600;\n        font-size: 24px;\n        line-height: 28px;\n        color: #ffffff;\n\n      \n      }\n    }\n    \n      \n  }\n\n  @media screen and (max-width: 768px) {\n    .react-datepicker {\n      line-height: 1;\n\n      &__month-container {\n        padding: 15px 18px;\n\n        & .react-datepicker__day {\n          font-size: 18px;\n        }\n        & .react-datepicker__day-names {\n          margin: 0px;\n        }\n        & .react-datepicker__day-name {\n          width: 48px;\n          height: 48px;\n          margin: 0;\n        }\n\n        & .react-datepicker__day {\n          &.outside-month {\n            visibility: hidden;\n            pointer-events: none;\n          }\n          &.highlighted-weekend {\n            opacity: 0.35;\n          }\n          &:hover,\n          &:focus {\n            color: #3e85f3;\n            border-radius: 50%;\n          }\n        }\n\n        & .react-datepicker__current-month {\n          font-size: 20px;\n          color: #ffffff;\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: 375px) {\n    .react-datepicker {\n      font-size: 14px;\n      line-height: 1;\n\n    \n      &__month-container {\n        padding: 0 0 20px 0;\n\n        .react-datepicker__week:not(:last-child) {\n          margin-bottom: 3px;\n        }\n\n        & .react-datepicker__day {\n          width: 32px;\n          height: 32px;\n          margin: 8px 6px;\n          font-size: 14px;\n\n          &--keyboard-selected,\n          &--selected {\n            background-color: #ffffff;\n            border-radius: 50%;\n            color: #3e85f3;\n          }\n          &__header {\n            height: 100px;\n            background-color: #3e85f3;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n            padding: 0;\n          }\n        }\n        & .react-datepicker__day-names {\n          margin: 0px;\n        }\n        & .react-datepicker__day-name {\n          width: 48px;\n          height: 42px;\n          margin: 0 -2px;\n          padding: 15px 19px;\n          color: #ffffff;\n          &::first-of-type {\n            margin-left: 3px;\n          }\n          &:last-child {\n            margin-right: 3px;\n          }\n        }\n\n        & .react-datepicker__day {\n          &.outside-month {\n            visibility: hidden;\n            pointer-events: none;\n          }\n          &.highlighted-weekend {\n            opacity: 0.35;\n          }\n          &:hover,\n          &:focus {\n            color: #3e85f3;\n            border-radius: 50%;\n          }\n        }\n\n        & .react-datepicker__current-month {\n          margin-top: 9px;\n          padding: 2px 0;\n          font-size: 20px;\n          color: #ffffff;\n        }\n      }\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setDates } from 'redux/date/dateSlice';\nimport { format } from 'date-fns';\nimport React from 'react';\n// import DatePicker from 'react-datepicker';\nimport { selectDate } from 'redux/date/selectors';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  CustomInput,\n  StyledDatePicker,\n  DatePickerWrapper,\n} from './StatisticsCalendar.styled';\n\nexport const StatisticsCalendar = () => {\n  const selectedDate = useSelector(selectDate);\n\n  const dispatch = useDispatch();\n  const handleChange = date => {\n    const formattedNewDate = format(date, 'yyyy-MM-dd');\n    dispatch(setDates(formattedNewDate));\n  };\n\n  return (\n    <DatePickerWrapper>\n      <StyledDatePicker\n        selected={new Date(selectedDate)}\n        onChange={handleChange}\n        customInput={<CustomInput />}\n        dateFormat=\"yyyy-MM-dd\"\n        calendarStartDay={1}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        fixedHeight\n      />\n    </DatePickerWrapper>\n  );\n};\n","import StatisticsChart from '../StatisticsChart/StatisticsChart';\nimport { BsFillCircleFill } from 'react-icons/bs';\nimport {\n  HeadContainer,\n  PeriodTime,\n  Period,\n  ChartContainer,\n  StatisticsWrapper,\n  PaginationWrapper,\n} from './StatisticsSection.styled';\nimport { StatisticsCalendar } from '../StatisticsCalendar/StatisticsCalendar';\nimport { PeriodPaginator } from 'components/CalendarToolbar/PeriodPaginator/PeriodPaginator';\n\nconst StatisticsSection = () => {\n  return (\n    <StatisticsWrapper>\n      <HeadContainer>\n        <PaginationWrapper>\n          <PeriodPaginator type={'day'} />\n          <StatisticsCalendar />\n        </PaginationWrapper>\n        <PeriodTime>\n          <Period>\n            <BsFillCircleFill fill=\"#FFD2DD\" size={8} /> By Day\n          </Period>\n          <Period>\n            <BsFillCircleFill fill=\"#3E85F3\" size={8} /> By Month\n          </Period>\n        </PeriodTime>\n      </HeadContainer>\n      <ChartContainer>\n        <StatisticsChart />\n      </ChartContainer>\n    </StatisticsWrapper>\n  );\n};\n\nexport default StatisticsSection;\n","import styled from 'styled-components';\n\nexport const StatisticsWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.mainBackgroundColor};\n  width: 100%;\n  padding: 34px 14px 135px 14px;\n\n  @media screen and (min-width: 768px) {\n    padding: 132px 32px 224px 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 134px 114px 104px 114px;\n  }\n`;\n","import StatisticsSection from 'components/Statistics/StatisticsSection/StatisticsSection';\nimport { StatisticsWrapper } from 'pages/StatisticsPage/StatisticsPage.styled';\n\nconst StatisticsPage = () => {\n  return (\n    <StatisticsWrapper>\n      <StatisticsSection />\n    </StatisticsWrapper>\n  );\n};\n\nexport default StatisticsPage;\n","export const selectDate = state => state.date.currentDate;\n","export const selectTasks = state => state.tasks;\n"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChevronLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","SvgChevronRight","PeriodPaginatorWrapper","styled","_templateObject","_taggedTemplateLiteral","Ul","_templateObject2","Li","_templateObject3","Btn","_templateObject4","theme","mainBackgroundColor","_ref2","_ref3","CalendarHead","StyledDate","_templateObject5","_ref4","accentColor","_ref5","buttontextColor","PeriodPaginator","type","params","useParams","dispatch","useDispatch","navigate","useNavigate","pathname","useLocation","normalizedDate","useSelector","selectDate","useEffect","currentDate","setDates","date","parse","Date","now","onChangeDate","e","period","concat","newDate","currentTarget","name","add","_defineProperty","sub","formattedNewDate","format","includes","_jsxs","children","_jsx","slice","className","onClick","LeftArrow","RightArrow","isDarkTheme","selectTheme","isMobile","useMediaQuery","query","year","getUTCFullYear","month","getUTCMonth","getTasks","selectedDate","tasks","selectTasks","tasksByDay","filter","task","taskByMonth","todoByDay","category","inprogressByDay","doneByDay","todoByMonth","inprogressByMonth","doneByMonth","allTasksByDay","allTasksByMonth","columns","byDay","Math","round","byMonth","renderCustomBarLabel","x","y","value","position","fontFamily","fontSize","textAnchor","dy","ResponsiveContainer","BarChart","data","margin","top","right","left","bottom","barCategoryGap","barGap","barSize","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickSize","tickMargin","axisLine","YAxis","ticks","tickLine","tickCount","Label","Bar","radius","minPointSize","label","StatisticsWrapper","HeadContainer","PaginationWrapper","PeriodTime","Period","periodColor","ChartContainer","_templateObject6","statisticsBorder","CustomInput","StyledDatePicker","DatePicker","DatePickerWrapper","StatisticsCalendar","selected","onChange","customInput","dateFormat","calendarStartDay","formatWeekDay","nameOfDay","substr","fixedHeight","BsFillCircleFill","size","StatisticsChart","StatisticsSection","state"],"sourceRoot":""}